tasks:
  autoware:
    commands:
      - cd ~/edgar/autoware
      - source install/setup.bash
      - export DISPLAY=:1
      - ros2 launch scenario_test_runner edgar_scenario_runner.launch.py architecture_type:=awf/universe record:=false scenario:='$(find-pkg-share scenario_test_runner)/scenario/edgar_0ped.yaml' sensor_model:=sample_sensor_kit vehicle_model:=sample_vehicle 2>&1 | tee autoware.log
    artifact_location: "~/edgar/autoware/autoware.log"
    start_deps:
      - tracing
  tracing:
    commands:
      - cd ~/edgar/autoware
      - source install/setup.bash
      - rm -rf ~/.ros/tracing/scenario-trace
      - ros2 trace -s scenario-trace -k
    artifact_location: "~/.ros/tracing/scenario-trace"
  runner_logs:
    commands: [ ]
    start_deps:
      - autoware
      - tracing
    artifact_location: "~/optimization_framework_ws/runner.log"
startup:
  commands:
    - pstree -p -s -T -c -a $$
    - pkill -f ros --signal SIGINT
    - timeout 5 tail --pid=$(pgrep -d ' --pid=' -f ros) -f /dev/null || pkill -f ros
    - pgrep -f 'autoware|http\.server|^python3 \./scenario_runner.py' | grep -v -x -F -e $$ -e $PPID | xargs kill
    - echo userspace | sudo tee /sys/devices/system/cpu/cpufreq/policy*/scaling_governor
    - echo 1500000 | sudo tee /sys/devices/system/cpu/cpufreq/policy*/scaling_setspeed
cleanup:
  commands:
    - pstree -p -s -T -c -a $$
    - pkill -f ros --signal SIGINT
    - timeout 5 tail --pid=$(pgrep -d ' --pid=' -f ros) -f /dev/null || pkill -f ros
    - pgrep -f 'autoware|http\.server|^python3 \./scenario_runner.py' | grep -v -x -F -e $$ -e $PPID | xargs kill
    - echo ondemand | sudo tee /sys/devices/system/cpu/cpufreq/policy*/scaling_governor
runtime_s: 60
